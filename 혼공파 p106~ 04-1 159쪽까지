03 - 1 불 자료형과 if 조건문
불 은 오직 True 와 False 만 가짐

불 비교연산자 
== 같다
!= 다르다
< 작다
> 크다
<= 작거나같다
>= 크거나같다

and 연산자 : 양쪽 변의 값이 모두 참일때 True
or 연산자 : 양쪽 값중 하나만 참이어도 True

if 조건문 구조 : if 불 값이 나오는 표현식: > 반드시 : 을 붙여야 한다
---- 불 값이 참일때 실행할 문장
---- 불 값이 참일때 실행할 문장

날짜와 시간을 관련된 기능을 가져오는것 : import datetime

현재 날짜와 시간
now = datetime.datetime.now()

03 - 2 if~else와 elif 구문

if 조건:
---- 조건이 참일때 실행할 문장
else:
----조건이 거짓일때 실행할 문장

elif구문

if 조건A:
---- 조건 A가 참일 때 실행할 문장
elif 조건B:
---- 조건 B가 참일 때 실행할 문장
elif 조건 C:
---- 조건 C가 참일 때 실행할 문장
else:
---- 모든 조건이 거짓일 때 문장

pass 키워드를 사용한 미구현 부분 입력

if number > 0 :
	pass #양수일때 아직 미구현 상태입니다.
else:
	pass #음수을때 아직 미구현 상태입니다.

04 - 1 리스트와 반복문

리스트 : 목록
요소 : [] 내부에 넣는 자료 영어로 element

인덱스 : [] 안에 들어간 숫자
ex) list_a[0]

1. 대괄호 안에 음수를 넣어 뒤에서부터 요소를 선택 가능
ex) list_a[-1] = 맨뒤 숫자

2. 리스트 접근 연산자를 다음과 같이 이중으로 사용가능
ex) list_a[3][0] = 세번째 요소에 0번째 글자

3. 리스트안에 리스트 사용가능
ex) list_a = [[1,2,3],[4,5,6],[7,8,9]]

len() 함수 : 요소의 개수를 알려준다.

리스트에 요소 추가하기 : append,insert

리스트명.append(요소)
리스트명.insert(위치,요소)

여러개의 요소를 한번에 추가할 때 extend() 함수 사용
ex) list_a.extend([1,2,3])

인덱스로 제거하기 : del,pop

del 리스트명[인덱스]

리스트명.pop(인덱스)

del 키워드로는 범위로 리스트요소 제거 가능
ex)del list_a[3:6] = 3인덱스 부터 6전 5인덱스까지 제거

값으로 제거하기 : remove
리스트.remove(값) (하지만 리스트에 중복된 여러개의 값을 제거하려면 반복문과 조합해야함)

모두제거하기 : 리스트.clear()

리스트 내부에 있는지 확인하기 : in/not in 연산자
값 in 리스트

for 반복문
ex) for i in range(100)
    print("출력")

for 반복문 : 리스트와 함께 사용하기

for 반복자 in 반복할 수 있는 것:
    코드




